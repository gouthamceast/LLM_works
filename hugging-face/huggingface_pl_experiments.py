# -*- coding: utf-8 -*-
"""LLM-learning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l507Rrt9JbqpX8GPBVne7xZ_JBg9nDbb
"""

from google.colab import userdata

!pip install transformers datasets diffusers

import torch
from transformers import pipeline
from diffusers import DiffusionPipeline
from datasets import load_dataset
import soundfile as sf
from IPython.display import Audio

# sentiment analysis
classifier = pipeline("sentiment-analysis",device="cuda")
result = classifier("It should have gone well yesterday, now how can i meet my manager to face")
print(result)

# Named entity recognition
ner = pipeline('ner', grouped_entities=True, device="cuda")
result = ner("My name is Sylvain and I work at Hugging Face in Brooklyn.")
print(result)

# question answering

question_answerer = pipeline("question-answering", device="cuda")
result = question_answerer(
    question="Where am i from ?",
    context="My name is Sylvain and I work at Hugging Face in Brooklyn",
)
print(result)

# summarizer
summarizer = pipeline("summarization", device="cuda")
text = """Hugging Face Diffusers is a Python library that helps users develop and use diffusion models to generate images, audio, and 3D molecular structures:
Inference: Diffusers can be used to run inference with a few lines of code.
Training: Diffusers can be used to train custom diffusion models.
Modular toolbox: Diffusers provides a toolbox with a variety of features, including:
Pretrained models: Diffusers offers pretrained vision diffusion models.
Noise schedulers: Diffusers provides a variety of noise schedulers that can be used to trade off speed and quality.
Training examples: Diffusers provides training examples for popular diffusion model tasks.
Easy to use: Diffusers is designed to be easy to use and customize, with a focus on usability over performance.
Open source: Diffusers' code is available on GitHub"""

summary = summarizer(text)
print(summary)

#translation

translator = pipeline("translation_en_to_fr", device='cuda')
result = translator("Hugging Face is a technology company based in New York and Paris")
print(result)

#Classification

classifier = pipeline("zero-shot-classification", device="cuda")
result = classifier(
    "This is a course about the Transformers library",
    candidate_labels=["education", "politics", "business"],
)
print(result)

#text generation

test_gen = pipeline("text-generation", device="cuda")
result = test_gen("In this course, we will teach you how to")
print(result)

#image generation

image = DiffusionPipeline.from_pretrained(
    "stabilityai/stable-diffusion-2-1-base",
    torch_dtype=torch.float16,
    use_safetensors=True,
    variant="fp16",
).to("cuda")
text = "A father doing late night study in front of a computer trying to elevate his present situation"
image = image(text).images[0]
image

